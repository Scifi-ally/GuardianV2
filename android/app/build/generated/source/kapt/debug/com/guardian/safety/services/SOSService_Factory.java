// Generated by Dagger (https://dagger.dev).
package com.guardian.safety.services;

import android.content.Context;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.firebase.functions.FirebaseFunctions;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SOSService_Factory implements Factory<SOSService> {
  private final Provider<Context> contextProvider;

  private final Provider<FirebaseFirestore> firestoreProvider;

  private final Provider<FirebaseFunctions> functionsProvider;

  public SOSService_Factory(Provider<Context> contextProvider,
      Provider<FirebaseFirestore> firestoreProvider,
      Provider<FirebaseFunctions> functionsProvider) {
    this.contextProvider = contextProvider;
    this.firestoreProvider = firestoreProvider;
    this.functionsProvider = functionsProvider;
  }

  @Override
  public SOSService get() {
    return newInstance(contextProvider.get(), firestoreProvider.get(), functionsProvider.get());
  }

  public static SOSService_Factory create(Provider<Context> contextProvider,
      Provider<FirebaseFirestore> firestoreProvider,
      Provider<FirebaseFunctions> functionsProvider) {
    return new SOSService_Factory(contextProvider, firestoreProvider, functionsProvider);
  }

  public static SOSService newInstance(Context context, FirebaseFirestore firestore,
      FirebaseFunctions functions) {
    return new SOSService(context, firestore, functions);
  }
}
