// Generated by Dagger (https://dagger.dev).
package com.guardian.safety.services;

import com.guardian.safety.data.repositories.AuthRepository;
import com.guardian.safety.data.repositories.SOSRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SOSAlertService_MembersInjector implements MembersInjector<SOSAlertService> {
  private final Provider<SOSRepository> sosRepositoryProvider;

  private final Provider<AuthRepository> authRepositoryProvider;

  public SOSAlertService_MembersInjector(Provider<SOSRepository> sosRepositoryProvider,
      Provider<AuthRepository> authRepositoryProvider) {
    this.sosRepositoryProvider = sosRepositoryProvider;
    this.authRepositoryProvider = authRepositoryProvider;
  }

  public static MembersInjector<SOSAlertService> create(
      Provider<SOSRepository> sosRepositoryProvider,
      Provider<AuthRepository> authRepositoryProvider) {
    return new SOSAlertService_MembersInjector(sosRepositoryProvider, authRepositoryProvider);
  }

  @Override
  public void injectMembers(SOSAlertService instance) {
    injectSosRepository(instance, sosRepositoryProvider.get());
    injectAuthRepository(instance, authRepositoryProvider.get());
  }

  @InjectedFieldSignature("com.guardian.safety.services.SOSAlertService.sosRepository")
  public static void injectSosRepository(SOSAlertService instance, SOSRepository sosRepository) {
    instance.sosRepository = sosRepository;
  }

  @InjectedFieldSignature("com.guardian.safety.services.SOSAlertService.authRepository")
  public static void injectAuthRepository(SOSAlertService instance, AuthRepository authRepository) {
    instance.authRepository = authRepository;
  }
}
